{"version":3,"sources":["services/proxy.babel.js"],"names":[],"mappings":";;;;;AAAA,IAAI,IAAI,GAAG,qCAAqC;;;AAAC,AAGjD,IAAI,KAAK,GAAG,EAAE,CAAC;AACf,KAAK,CAAC,IAAI,GAAG,EAAE;;;;;;;AAAC,AAOhB,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,UAAS,MAAM,EAAE;AAChC,SAAO,KAAK,CAAC,IAAI,GAAG,QAAQ,EAAE;AAC1B,UAAM,EAAE,KAAK;AACb,QAAI,EAAE,MAAM;GACb,CAAC,CACD,IAAI,CAAC,UAAS,GAAG,EAAE;AAClB,QAAI,GAAG,CAAC,EAAE,EAAE;AACV,aAAO,GAAG,CAAC,IAAI,EAAE,CAAC;KACnB;GACF,CAAC,CAAC;CACN;;;;;;;AAAA,AAOD,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,UAAS,IAAI,EAAE;AACjC,SAAO,KAAK,CAAC,IAAI,GAAG,QAAQ,EAAE;AAC1B,UAAM,EAAE,MAAM;AACd,UAAM,EAAE;AACN,cAAQ,EAAE,kBAAkB;AAC5B,oBAAc,EAAE,kBAAkB;KACnC;AACD,QAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;GAC3B,CAAC,CACD,IAAI,CAAC,UAAS,GAAG,EAAE;AAClB,QAAI,GAAG,CAAC,EAAE,EAAE;AACV,aAAO,GAAG,CAAC,IAAI,EAAE,CAAC;KACnB;GACF,CAAC,CAAC;CAEN;;;;;;;AAAA,AAOD,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,UAAS,IAAI,EAAE;AACjC,SAAO,KAAK,CAAC,IAAI,GAAG,QAAQ,EAAE;AAC1B,UAAM,EAAE,QAAQ;AAChB,UAAM,EAAE;AACN,cAAQ,EAAE,kBAAkB;AAC5B,oBAAc,EAAE,kBAAkB;KACnC;AACD,QAAI,EAAE,IAAI;GACX,CAAC,CACD,IAAI,CAAC,UAAS,GAAG,EAAE;AAClB,QAAI,GAAG,CAAC,EAAE,EAAE;AACV,aAAO,GAAG,CAAC,IAAI,EAAE,CAAC;KACnB;GACF,CAAC,CAAC;CACN,CAAC;;AAGF,KAAK,CAAC,kBAAkB,GAAG,YAAW;AACpC,SAAO,KAAK,CAAC,kEAAkE,CAAC,CAC7E,IAAI,CAAC,UAAS,GAAG,EAAE;AAClB,WAAO,GAAG,CAAC,IAAI,EAAE,CAAC;GACnB,CAAC,CACD,IAAI,CAAC,UAAS,MAAM,EAAE;AACrB,QAAI,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AAC5C,WAAO,SAAS,CAAC;GAClB,CAAC,CAAC;CACN,CAAA;;kBAEc,KAAK","file":"services/proxy.babel.js","sourcesContent":["var root = 'http://jsonplaceholder.typicode.com';\r\n// var root = 'http://localhost:1234/api';\r\n\r\nlet proxy = {};\r\nproxy.Task = {};\r\n\r\n/**\r\n * 获取task\r\n * @param  {[type]} params querystring\r\n * @return {[type]}        [description]\r\n */\r\nproxy.Task.get = function(params) {\r\n  return fetch(root + '/todos', {\r\n      method: 'GET',\r\n      body: params\r\n    })\r\n    .then(function(res) {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * 创建 task\r\n * @param  {[type]} task [description]\r\n * @return {[type]}      [description]\r\n */\r\nproxy.Task.create = function(task) {\r\n  return fetch(root + '/todos', {\r\n      method: 'post',\r\n      header: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n    .then(function(res) {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    });\r\n\r\n}\r\n\r\n/**\r\n * 删除 task\r\n * @param  {[type]} task [description]\r\n * @return {[type]}      [description]\r\n */\r\nproxy.Task.delete = function(task) {\r\n  return fetch(root + '/todos', {\r\n      method: 'delete',\r\n      header: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: task\r\n    })\r\n    .then(function(res) {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    });\r\n};\r\n\r\n\r\nproxy.getBackgroundImage = function() {\r\n  return fetch('http://ww1.sinaimg.cn/large/7e8b4ac8jw1ez8vuclmvcj21hc0xc7fn.jpg')\r\n    .then(function(res) {\r\n      return res.blob();\r\n    })\r\n    .then(function(myBlob) {\r\n      var objectURL = URL.createObjectURL(myBlob);\r\n      return objectURL;\r\n    });\r\n}\r\n\r\nexport default proxy\r\n"],"sourceRoot":"/source/"}