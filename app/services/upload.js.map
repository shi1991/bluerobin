{"version":3,"sources":["services/upload.babel.js"],"names":[],"mappings":";;;;;AAAE,SAAS,WAAW,CAAC,GAAG,EAAC;AACvB,QAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC5B,gBAAQ,EAAE,mBAAmB;AAC7B,qBAAa,EAAE,GAAG,CAAC,aAAa,IAAI,QAAQ;AAC5C,mBAAW,EAAE,2CAA2C;;;;;;;;AAQxD,cAAM,EAAE,wCAAwC;;AAEhD,iBAAS,EAAE,GAAG,CAAC,SAAS,IAAI,WAAW;AACvC,qBAAa,EAAE,OAAO;AACtB,qBAAa,EAAE,oCAAoC;AACnD,mBAAW,EAAE,CAAC;AACd,gBAAQ,EAAE,IAAI;AACd,oBAAY,EAAE,GAAG,CAAC,YAAY,IAAI,aAAa;AAC/C,kBAAU,EAAE,KAAK;AACjB,kBAAU,EAAE,IAAI;AAChB,YAAI,EAAE;AACF,wBAAY,EAAE,oBAAS,EAAE,EAAE,KAAK,EAAE;AAC9B,uBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,wBAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,UAAS,IAAI,EAAE;;iBAEnC,CAAC,CAAC;aACN;AACD,0BAAc,EAAE,sBAAS,EAAE,EAAE,IAAI,EAAE;;aAElC;AACD,4BAAgB,EAAE,wBAAS,EAAE,EAAE,IAAI,EAAE;;aAEpC;AACD,0BAAc,EAAE,sBAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;;;;;;;;;;;aAWxC;AACD,mBAAO,EAAE,eAAS,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE;;aAElC;AACD,4BAAgB,EAAE,0BAAW;;aAE5B;AACD,iBAAK,EAAE,aAAS,EAAE,EAAE,IAAI,EAAE;;;;;AAKtB,uBAAO,IAAI,CAAC,IAAI,CAAC;aACpB;SACJ;KACF,CAAC,CAAC;AACH,WAAO,QAAQ,CAAC;CACjB;;kBAEY,WAAW","file":"services/upload.babel.js","sourcesContent":["  function uploadrInit(opt){\n    var uploader = Qiniu.uploader({\n      runtimes: 'html5,flash,html4',    //上传模式,依次退化\n      browse_button: opt.browse_button || 'browse',       //上传选择的点选按钮，**必需**\n      uptoken_url: 'http://zhanglun.daoapp.io/api/qiniu/token',\n          //Ajax请求upToken的Url，**强烈建议设置**（服务端提供）\n      // uptoken : '<Your upload token>',\n          //若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成\n      // unique_names: true,\n          // 默认 false，key为文件名。若开启该选项，SDK会为每个文件自动生成key（文件名）\n      // save_key: true,\n          // 默认 false。若在服务端生成uptoken的上传策略中指定了 `sava_key`，则开启，SDK在前端将不对key进行任何处理\n      domain: 'http://7i7gl0.com1.z0.glb.clouddn.com/',\n          //bucket 域名，下载资源时用到，**必需**\n      container: opt.container || 'container',           //上传区域DOM ID，默认是browser_button的父元素，\n      max_file_size: '100mb',           //最大文件体积限制\n      flash_swf_url: 'vendor/plupload-2.1.8/js/Moxie.swf',  //引入flash,相对路径\n      max_retries: 3,                   //上传失败最大重试次数\n      dragdrop: true,                   //开启可拖曳上传\n      drop_element: opt.drop_element || 'taskInputer',        //拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传\n      chunk_size: '4mb',                //分块上传时，每片的体积\n      auto_start: true,                 //选择文件后自动上传，若关闭需要自己绑定事件触发上传,\n      init: {\n          'FilesAdded': function(up, files) {\n              console.log(files);\n              plupload.each(files, function(file) {\n                  // 文件添加进队列后,处理相关的事情\n              });\n          },\n          'BeforeUpload': function(up, file) {\n                 // 每个文件上传前,处理相关的事情\n          },\n          'UploadProgress': function(up, file) {\n                 // 每个文件上传时,处理相关的事情\n          },\n          'FileUploaded': function(up, file, info) {\n                 // 每个文件上传成功后,处理相关的事情\n                 // 其中 info 是文件上传成功后，服务端返回的json，形式如\n                 // {\n                 //    \"hash\": \"Fh8xVqod2MQ1mocfI4S4KpRL6D98\",\n                 //    \"key\": \"gogopher.jpg\"\n                 //  }\n                 // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html\n                 // var domain = up.getOption('domain');\n                 // var res = parseJSON(info);\n                 // var sourceLink = domain + res.key; 获取上传成功后的文件的Url\n          },\n          'Error': function(up, err, errTip) {\n                 //上传出错时,处理相关的事情\n          },\n          'UploadComplete': function() {\n                 //队列文件处理完毕后,处理相关的事情\n          },\n          'Key': function(up, file) {\n              // 若想在前端对每个文件的key进行个性化处理，可以配置该函数\n              // 该配置必须要在 unique_names: false , save_key: false 时才生效\n              // var key = \"\";\n              // do something with key here\n              return file.name;\n          }\n      }\n    });\n    return uploader;\n  }\n\nexport default uploadrInit"],"sourceRoot":"/source/"}