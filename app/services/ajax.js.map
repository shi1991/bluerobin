{"version":3,"sources":["services/ajax.babel.js"],"names":[],"mappings":";;;;;AAAA,IAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,IAAI,IAAI,GAAG,SAAP,IAAI,CAAY,OAAO,EAAE;AAC3B,MAAI,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC;AACrC,MAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,IAAI,YAAW,EAAE,CAAC;AAChD,MAAI,MAAM,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;AAChC,MAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;AACtC,MAAI,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,SAAS,CAAC;AACjD,MAAI,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC;AAClC,MAAI,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,YAAW,EAAE,CAAC;AAC3C,MAAI,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,YAAW,EAAE,CAAC;;AAEvC,MAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;AAC/B,SAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;;AAE3C,OAAG,CAAC,kBAAkB,GAAG,YAAW;AAClC,UAAI,GAAG,CAAC,UAAU,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;;AAE5C,YAAI,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC;AAC9B,YAAI,QAAQ,IAAI,MAAM,EAAE;;AAEtB,iBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7B,MAAM;AACL,iBAAO,CAAC,MAAM,CAAC,CAAC;SACjB;OACF,MAAM;;OAEN;KACF,CAAC;AACF,OAAG,CAAC,OAAO,GAAG,UAAS,CAAC,EAAE;AACxB,YAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KAChB,CAAA;AACD,OAAG,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC3C,QAAI,MAAM,IAAI,MAAM,EAAE;;AAEpB,SAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,iCAAiC,CAAC,CAAC;KACzE;AACD,OAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;GAClC,CAAC,CAAC;CAEJ,CAAC;;AAIF,KAAK,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE;AAC1B,MAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,SAAO,IAAI,CAAC,IAAI,CAAC,CAAC;CACnB,CAAA;;AAED,KAAK,CAAC,GAAG,GAAG,UAAS,IAAI,EAAE;AACzB,SAAO,IAAI,CAAC,IAAI,CAAC,CAAC;CACnB,CAAA;;kBAEc,KAAK","file":"services/ajax.babel.js","sourcesContent":["let $ajax = {};\n\nlet ajax = function(setting) {\n  let method = setting.method || \"get\";\n  let callback = setting.success || function() {};\n  let params = setting.data || \"\";\n  let dataType = setting.dataType || \"\";\n  let beforeSend = setting.beforeSend || undefined;\n  let asnyc = setting.asnyc || true;\n  let error = setting.error || function() {};\n  let url = setting.url || function() {};\n\n  let xhr = new XMLHttpRequest();\n  return new Promise(function(resolve, reject) {\n\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        // ready\n        let result = xhr.responseText;\n        if (dataType == 'json') {\n\n          resolve(JSON.parse(result));\n        } else {\n          resolve(result);\n        }\n      } else {\n        // not ready\n      }\n    };\n    xhr.onerror = function(e) {\n      reject(xhr, e);\n    }\n    xhr.open(method.toLowerCase(), url, asnyc);\n    if (method == \"post\") {\n      // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n      xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n    }\n    xhr.send(JSON.stringify(params));\n  });\n\n};\n\n\n\n$ajax.post = function(conf) {\n  conf.method = 'post';\n  return ajax(conf);\n}\n\n$ajax.get = function(conf) {\n  return ajax(conf);\n}\n\nexport default $ajax;\n"],"sourceRoot":"/source/"}