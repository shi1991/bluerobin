{"version":3,"sources":["services/ajax.babel.js"],"names":[],"mappings":";;;;;AAAA,IAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,IAAI,IAAI,GAAG,SAAP,IAAI,CAAY,OAAO,EAAE;AAC3B,MAAI,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,KAAK;;AAAC,AAErC,MAAI,MAAM,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;AAChC,MAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,EAAE;;AAAC,AAEtC,MAAI,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI;;AAAC,AAElC,MAAI,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,YAAW,EAAE,CAAC;AACvC,MAAI,MAAM,GAAI,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC;AACrC,MAAI,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC;;AAElC,MAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;AAC/B,SAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;;AAE3C,OAAG,CAAC,kBAAkB,GAAG,YAAW;AAClC,UAAI,GAAG,CAAC,UAAU,KAAK,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;;AAE9C,YAAI,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC;AAC9B,YAAI,QAAQ,KAAK,MAAM,EAAE;;AAEvB,iBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7B,MAAM;AACL,iBAAO,CAAC,MAAM,CAAC,CAAC;SACjB;OACF,MAAM;;OAEN;KACF,CAAC;AACF,OAAG,CAAC,OAAO,GAAG,UAAS,CAAC,EAAE;AACxB,YAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KAChB,CAAC;;AAEF,OAAG,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,GAAG,GAAG,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;;AAE9E,QAAG,KAAK,EAAC;AACP,SAAG,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;KAC/C;;AAED,QAAI,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,KAAK,EAAE;AACzC,SAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,iCAAiC,CAAC,CAAC;AACxE,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;KAClC,MAAI;AACH,SAAG,CAAC,IAAI,EAAE,CAAC;KACZ;GAEF,CAAC,CAAC;CAEJ,CAAC;;AAGF,KAAK,CAAC,GAAG,GAAG,YAAU,EAErB,CAAC;;AAEF,KAAK,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE;AAC1B,MAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,SAAO,IAAI,CAAC,IAAI,CAAC,CAAC;CACnB,CAAC;;AAEF,KAAK,CAAC,GAAG,GAAG,UAAS,IAAI,EAAE;AACzB,SAAO,IAAI,CAAC,IAAI,CAAC,CAAC;CACnB,CAAC;;AAEF,KAAK,CAAC,MAAM,GAAG,UAAS,IAAI,EAAC;AAC3B,MAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvB,SAAO,IAAI,CAAC,IAAI,CAAC,CAAC;CACnB,CAAC;;AAEF,KAAK,CAAC,GAAG,GAAG,UAAS,IAAI,EAAC;AACxB,MAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,SAAO,IAAI,CAAC,IAAI,CAAC,CAAC;CACnB,CAAC;;kBAEa,KAAK","file":"services/ajax.babel.js","sourcesContent":["let $ajax = {};\r\n\r\nlet ajax = function(setting) {\r\n  let method = setting.method || 'get';\r\n  // let callback = setting.success || function() {};\r\n  let params = setting.data || {};\r\n  let dataType = setting.dataType || '';\r\n  // let beforeSend = setting.beforeSend || undefined;\r\n  let asnyc = setting.asnyc || true;\r\n  // let error = setting.error || function() {};\r\n  let url = setting.url || function() {};\r\n  let header  = setting.header || null;\r\n  let token = setting.token || null;\r\n\r\n  let xhr = new XMLHttpRequest();\r\n  return new Promise(function(resolve, reject) {\r\n\r\n    xhr.onreadystatechange = function() {\r\n      if (xhr.readyState === 4 && xhr.status === 200) {\r\n        // ready\r\n        let result = xhr.responseText;\r\n        if (dataType === 'json') {\r\n\r\n          resolve(JSON.parse(result));\r\n        } else {\r\n          resolve(result);\r\n        }\r\n      } else {\r\n        // not ready\r\n      }\r\n    };\r\n    xhr.onerror = function(e) {\r\n      reject(xhr, e);\r\n    };\r\n\r\n    xhr.open(method.toLowerCase(), url + '?stamp=' + new Date().getTime(), asnyc);\r\n\r\n    if(token){\r\n      xhr.setRequestHeader('x-access-token', token);\r\n    }\r\n\r\n    if (method === 'post' || method === 'put') {\r\n      xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n      xhr.send(JSON.stringify(params));\r\n    }else{\r\n      xhr.send();\r\n    }\r\n    \r\n  });\r\n\r\n};\r\n\r\n\r\n$ajax.set = function(){\r\n  \r\n};\r\n\r\n$ajax.post = function(conf) {\r\n  conf.method = 'post';\r\n  return ajax(conf);\r\n};\r\n\r\n$ajax.get = function(conf) {\r\n  return ajax(conf);\r\n};\r\n\r\n$ajax.delete = function(conf){\r\n  conf.method = 'delete';\r\n  return ajax(conf);\r\n};\r\n\r\n$ajax.put = function(conf){\r\n  conf.method = 'put';\r\n  return ajax(conf);\r\n};\r\n\r\nexport default $ajax;\r\n"],"sourceRoot":"/source/"}